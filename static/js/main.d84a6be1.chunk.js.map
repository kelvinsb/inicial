{"version":3,"sources":["pages/inicial/parts/Header/Menu.jsx","pages/inicial/parts/Header/Info.jsx","pages/inicial/parts/Header/Header.jsx","components/Titulo.jsx","components/Hr.jsx","components/wrappers/Container.jsx","pages/inicial/parts/Projetos/index.jsx","pages/inicial/parts/Skills/index.jsx","pages/inicial/parts/Certificados/index.jsx","pages/inicial/parts/Experiencia/index.jsx","pages/inicial/parts/Footer.jsx","pages/inicial/parts/Informacoes/index.jsx","pages/inicial/index.jsx","serviceWorker.js","index.js"],"names":["MenuItem","archorLink","label","itemAtivo","mudarItem","href","className","onClick","ReactGA","event","category","action","React","useState","isActive","setIsActive","colorBackground","setColorBackground","end","window","location","split","menuSelecionadoPelaUrl","length","menuSelecionado","setMenuSelecionado","listenScroll","scrollY","useEffect","addEventListener","id","role","aria-label","tabIndex","aria-expanded","data-target","aria-hidden","Info","topo","nome","titulo","subtitulo","foto","src","alt","Header","Menu","Titulo","Hr","style","borderColor","backgroundColor","Container","children","isFluid","isFullHd","classes","cssClasses","paddingTop","paddingBottom","defaultProps","ModalGaleria","elemento","isOpen","fecharModal","display","lazyLoad","showNav","showThumbnailsshowFullscreenButton","showPlayButton","items","imagens","ColunaImagem","imagem","ColunaInfo","isModalOpen","setModalOpen","tipo","data","deploy","descricao","__html","tecnologias","join","deployFormatado","dataFormatada","moment","format","url","target","rel","dangerouslySetInnerHTML","ListarProjetos","dados","map","indice","corEscolhida","corEscolhidaPraClasseUm","classColunaUm1","classColunaUm2","key","Projetos","projetos","ListarHabilidades","skills","classe","type","skill","Skills","habilidades","Certificados","certificados","ano","ListarExperiencias","experiencias","empresa","funcao","periodo","Experiencia","Footer","Informacoes","ReactGa","initialize","pageview","pathname","search","hotjar","index","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d84a6be1.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactGA from 'react-ga';\n// eslint-disable-next-line import/no-unresolved\nimport './menu.css';\n\nconst MenuItem = ({\n    archorLink = '',\n    label = '',\n    itemAtivo = '',\n    mudarItem = {},\n}) => (\n    <a\n        href={`#${archorLink}`}\n        className={`navbar-item${itemAtivo === archorLink ? ' is-active' : ''}`}\n        onClick={() => {\n            mudarItem(archorLink);\n            ReactGA.event({\n                category: 'item-menu',\n                action: `clicou em ${label}`,\n            });\n        }}\n    >\n        { label }\n    </a>\n);\n\nMenuItem.propTypes = {\n    archorLink: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    itemAtivo: PropTypes.string.isRequired,\n    mudarItem: PropTypes.func.isRequired,\n};\n\nexport default () => {\n    const [isActive, setIsActive] = React.useState(false);\n    const [colorBackground, setColorBackground] = React.useState(false);\n\n    const end = window.location.href.split('#');\n    const menuSelecionadoPelaUrl = end.length === 2 ? end[1] : 'topo';\n\n    const [menuSelecionado, setMenuSelecionado] = React.useState(menuSelecionadoPelaUrl);\n\n    const listenScroll = () => {\n        if (window.scrollY > 170) {\n            setColorBackground(true);\n        } else {\n            setColorBackground(false);\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener('scroll', listenScroll);\n    });\n\n    return (\n        <nav\n            id=\"topo\"\n            className={`navbar is-fixed-top ${colorBackground ? 'cor-scroll' : 'cor-topo'}`}\n            role=\"navigation\"\n            aria-label=\"main navigation\"\n        >\n            <div className=\"navbar-brand\">\n                <a\n                    role=\"button\"\n                    tabIndex=\"0\"\n                    className={`navbar-burger burger ${isActive ? 'is-active' : ''}`}\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                    data-target=\"menu-superior\"\n                    onClick={() => {\n                        setIsActive(!isActive);\n                    }}\n                >\n                    <span aria-hidden=\"true\" />\n                    <span aria-hidden=\"true\" />\n                    <span aria-hidden=\"true\" />\n                </a>\n            </div>\n            <div\n                id=\"menu-superior\"\n                className={`navbar-menu ${isActive ? 'is-active' : ''}`}\n            >\n                <div className=\"navbar-end menu-superior\">\n                    <MenuItem\n                        archorLink=\"topo\"\n                        label=\"Inicio\"\n                        itemAtivo={menuSelecionado}\n                        mudarItem={setMenuSelecionado}\n                    />\n                    <MenuItem\n                        archorLink=\"projetos\"\n                        label=\"Projetos\"\n                        itemAtivo={menuSelecionado}\n                        mudarItem={setMenuSelecionado}\n                    />\n                    <MenuItem\n                        archorLink=\"habilidades\"\n                        label=\"Habildades\"\n                        itemAtivo={menuSelecionado}\n                        mudarItem={setMenuSelecionado}\n                    />\n                    <MenuItem\n                        archorLink=\"certificados\"\n                        label=\"Certificados\"\n                        itemAtivo={menuSelecionado}\n                        mudarItem={setMenuSelecionado}\n                    />\n                    <MenuItem\n                        archorLink=\"experiencia\"\n                        label=\"Experiências\"\n                        itemAtivo={menuSelecionado}\n                        mudarItem={setMenuSelecionado}\n                    />\n                    <MenuItem\n                        archorLink=\"about-me\"\n                        label=\"Sobre\"\n                        itemAtivo={menuSelecionado}\n                        mudarItem={setMenuSelecionado}\n                    />\n                </div>\n            </div>\n        </nav>\n    );\n};\n","import React from 'react';\nimport topo from '../../../../data/topo.json';\nimport './info.css';\n\nconst Info = () => {\n    const {\n        nome = '',\n        titulo = '',\n        subtitulo = '',\n        foto = '',\n    } = topo;\n\n    return (\n        <div className=\"container\">\n            <div className=\"columns is-vcentered\">\n                <div className=\"column is-2\">\n                    <div className=\"container is-fluid \">\n                        <figure className=\"image is-128x128\">\n                            <img className=\"is-rounded\" src={foto} alt=\"foto\" />\n                        </figure>\n                    </div>\n                </div>\n                <div className=\"column\">\n                    <section className=\"hero\">\n                        <div className=\"hero-body info-topo\">\n                            <div className=\"container\">\n                                <h1 className=\"title\">\n                                    {nome}\n                                </h1>\n                                <h2 className=\"subtitle\">\n                                    {titulo}\n                                </h2>\n                                <h3 className=\"subtitle\">\n                                    {subtitulo}\n                                </h3>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Info;\n","import React from 'react';\nimport './Header.css';\n\nimport Menu from './Menu';\nimport Info from './Info';\n\nconst Header = () => (\n    <header className=\"section-header fundo-topo\" id=\"topo\">\n        <div className=\"container\">\n            <Menu />\n            <Info />\n        </div>\n    </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Titulo.css';\n\nconst Titulo = ({\n    titulo = '',\n    id = '',\n}) => (\n    <div className=\"container is-fluid has-text-centered main-title titulo is-size-3\" id={id}>\n        { titulo }\n    </div>\n);\n\nTitulo.propTypes = {\n    titulo: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n\nexport default Titulo;\n","import React from 'react';\n\nconst Hr = () => (\n    <hr\n        style={{\n            borderColor: '#CCC',\n            backgroundColor: '#CCC',\n        }}\n    />\n);\n\nexport default Hr;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Container = ({\n    children,\n    isFluid = false,\n    isFullHd = false,\n    classes = '',\n}) => {\n    let cssClasses = '';\n    cssClasses += 'container';\n    cssClasses += isFluid ? ' is-fluid' : '';\n    cssClasses += isFullHd ? ' is-fullhd' : '';\n    cssClasses += ` ${classes}`;\n    return (\n        <div\n            className={cssClasses}\n            style={{\n                paddingTop: '20px',\n                paddingBottom: '20px',\n            }}\n        >\n            <div className=\"columns\">\n                { children }\n            </div>\n        </div>\n    );\n};\n\nContainer.propTypes = {\n    children: PropTypes.element.isRequired,\n    isFluid: PropTypes.bool,\n    isFullHd: PropTypes.bool,\n    classes: PropTypes.string,\n};\n\nContainer.defaultProps = {\n    isFluid: false,\n    isFullHd: false,\n    classes: '',\n};\n\nexport default Container;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable react/no-danger */\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Galeria from 'react-image-gallery';\nimport 'moment/locale/pt-br';\nimport projetos from '../../../../data/projetos.json';\nimport './index.css';\nimport Titulo from '../../../../components/Titulo';\nimport Hr from '../../../../components/Hr';\nimport Container from '../../../../components/wrappers/Container';\n\n\nconst ModalGaleria = ({\n    elemento = {},\n    isOpen = false,\n    fecharModal = () => {},\n}) => {\n    if (isOpen) {\n        return (\n            <div\n                className={`modal modal-${elemento.nome} is-active`}\n                style={{\n                    display: isOpen ? 'flex' : 'none',\n                }}\n            >\n                <div\n                    className=\"modal-background\"\n                    onClick={fecharModal}\n                />\n                <div className=\"modal-content\">\n                    <Galeria\n                        lazyLoad\n                        showNav\n                        showThumbnailsshowFullscreenButton\n                        showPlayButton={false}\n                        items={elemento.imagens}\n                    />\n                </div>\n                <div\n                    className=\"modal-close is-large\"\n                    aria-label=\"close\"\n                    onClick={fecharModal}\n                />\n            </div>\n        );\n    }\n    return null;\n};\n\nModalGaleria.defaultProps = {\n    elemento: [],\n    isOpen: false,\n    fecharModal: () => {},\n};\n\nModalGaleria.propTypes = {\n    elemento: PropTypes.objectOf,\n    isOpen: PropTypes.bool,\n    fecharModal: PropTypes.func,\n};\n\nconst ColunaImagem = ({\n    elemento,\n}) => (\n    <div\n        className=\"imagem-principal box has-text-centered\"\n    >\n        { elemento.imagem\n            ? (\n                <img src={elemento.imagem} alt={elemento.nome} className=\"responsive-image\" />\n            )\n            : 'Sem imagens' }\n    </div>\n);\n\nColunaImagem.defaultProps = {\n    elemento: null,\n};\n\nColunaImagem.propTypes = {\n    elemento: PropTypes.objectOf,\n};\n\nconst ColunaInfo = ({\n    elemento,\n}) => {\n    const [isModalOpen, setModalOpen] = useState(false);\n\n    const {\n        tipo,\n        data,\n        deploy,\n    } = elemento;\n    const descricao = { __html: elemento.descricao };\n    const tecnologias = elemento.tecnologias.join(', ');\n    const deployFormatado = (deploy === true ? 'Sim' : 'Não');\n    const dataFormatada = moment(data, 'DD/MM/YYYY').format('LL');\n    return (\n        <>\n            <ModalGaleria\n                elemento={elemento}\n                isOpen={isModalOpen}\n                fecharModal={() => setModalOpen(!isModalOpen)}\n            />\n            <h2\n                className=\"title is-2\"\n            >\n                { elemento.nome }\n            </h2>\n            <h5\n                className=\"title is-5\"\n            >\n                <a href={elemento.url[0]} target=\"_blank\" rel=\"noopener noreferrer\">Link para o projeto</a>\n            </h5>\n            <p dangerouslySetInnerHTML={descricao} />\n            <Hr />\n            <ul>\n                <li>\n                    <strong>Tecnologia:</strong>\n                    { ' ' }\n                    { tecnologias }\n                </li>\n                <li>\n                    <strong>Tipo:</strong>\n                    { ' ' }\n                    { tipo }\n                </li>\n                <li>\n                    <strong>Data:</strong>\n                    { ' ' }\n                    { dataFormatada }\n                </li>\n                <li>\n                    <strong>Deploy:</strong>\n                    { ' ' }\n                    { deployFormatado }\n                </li>\n            </ul>\n            <br />\n            { elemento.imagens\n                ? (\n                    <div\n                        className=\"button is-dark\"\n                        onClick={() => setModalOpen(!isModalOpen)}\n                    >\n                        Ver imagens\n                    </div>\n                ) : null }\n        </>\n    );\n};\n\nColunaInfo.defaultProps = {\n    elemento: null,\n};\n\nColunaInfo.propTypes = {\n    elemento: PropTypes.objectOf,\n};\n\nconst ListarProjetos = ({\n    dados = [],\n}) => {\n    if (dados) {\n        if (dados.length) {\n            const corUm = '64A2C4';\n            const corDois = '#F0EFEF';\n            return (\n                dados.map((elemento, indice) => {\n                    const corEscolhida = indice % 2 === 0 ? corUm : corDois;\n                    const corEscolhidaPraClasseUm = corEscolhida === corUm;\n                    const classColunaUm1 = corEscolhidaPraClasseUm ? 'column is-3 is-offset-2' : 'column is-5 is-offset-2';\n                    const classColunaUm2 = corEscolhidaPraClasseUm ? 'column is-5 is-offset-1' : 'column is-3 is-offset-1';\n                    return (\n                        <div\n                            className=\"container-fluid projetos\"\n                            style={{\n                                backgroundColor: corEscolhida,\n                            }}\n                            key={elemento.nome}\n                        >\n                            <Container\n                                isFluid\n                            >\n                                <div\n                                    className={classColunaUm1}\n                                >\n                                    {\n                                        corEscolhidaPraClasseUm\n                                            ? <ColunaImagem elemento={elemento} />\n                                            : <ColunaInfo elemento={elemento} />\n                                    }\n                                </div>\n                                <div\n                                    className={classColunaUm2}\n                                >\n                                    {\n                                        corEscolhidaPraClasseUm\n                                            ? <ColunaInfo elemento={elemento} />\n                                            : <ColunaImagem elemento={elemento} />\n                                    }\n                                </div>\n                            </Container>\n                        </div>\n                    );\n                })\n            );\n        }\n    }\n    return null;\n};\n\nListarProjetos.defaultProps = {\n    dados: [],\n};\n\nListarProjetos.propTypes = {\n    dados: PropTypes.arrayOf,\n};\n\nconst Projetos = () => (\n    <>\n        <Titulo\n            titulo=\"Projetos\"\n            id=\"projetos\"\n        />\n        <ListarProjetos\n            dados={projetos}\n        />\n    </>\n);\n\nexport default Projetos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Titulo from '../../../../components/Titulo';\nimport habilidades from '../../../../data/skills.json';\nimport Container from '../../../../components/wrappers/Container';\n\nconst ListarHabilidades = ({\n    skills = [],\n}) => {\n    if (skills && skills.length) {\n        return (\n            <div\n                className=\"container\"\n            >\n                <Container\n                    isFluid\n                >\n                    { skills.map((elemento, indice) => {\n                        const classe = indice % 3 === 0 ? ' is-offset-2' : '';\n                        return (\n                            <div className={`column is-3 ${classe}`} key={elemento.nome}>\n                                <h3 className=\"title is-3\">\n                                    { elemento.nome || '' }\n                                </h3>\n                                <ol type=\"1\">\n                                    { elemento.skills\n                                        ? elemento.skills.map((skill) => (\n                                            <li key={skill}>{ skill }</li>\n                                        ))\n                                        : null }\n                                </ol>\n                            </div>\n                        );\n                    })}\n                </Container>\n            </div>\n        );\n    }\n    return null;\n};\n\nListarHabilidades.propTypes = {\n    skills: PropTypes.arrayOf,\n};\n\nListarHabilidades.defaultProps = {\n    skills: [],\n};\n\nconst Skills = () => {\n    return (\n        <>\n            <Titulo\n                titulo=\"Habilidades\"\n                id=\"habilidades\"\n            />\n            <ListarHabilidades\n                skills={habilidades}\n            />\n        </>\n    );\n};\n\nexport default Skills;\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport Titulo from '../../../../components/Titulo';\nimport certificados from '../../../../data/certificados.json';\nimport Container from '../../../../components/wrappers/Container';\n\nconst Certificados = () => (\n    <>\n        <Titulo\n            titulo=\"Certificados\"\n            id=\"certificados\"\n        />\n        <Container\n            isFluid\n        >\n            <div\n                className=\"column is-offset-2\"\n            >\n                <div className=\"content\">\n                    <div className=\"ul\">\n                        { certificados.map((elemento) => {\n                            const descricao = { __html: elemento.descricao };\n                            return (\n                                <li key={elemento.nome}>\n                                    <strong>\n                                        {elemento.nome}\n                                        :\n                                    </strong>\n                                    { ' ' }\n                                    {elemento.ano}\n                                    <br />\n                                    <div dangerouslySetInnerHTML={descricao} />\n                                </li>\n                            );\n                        }) }\n                    </div>\n                </div>\n            </div>\n        </Container>\n    </>\n);\n\nexport default Certificados;\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport Titulo from '../../../../components/Titulo';\nimport experiencias from '../../../../data/experiencias.json';\nimport Container from '../../../../components/wrappers/Container';\nimport Hr from '../../../../components/Hr';\n\nconst ListarExperiencias = () => (\n    <Container\n        isFluid\n    >\n        <div\n            className=\"column is-offset-2 is-8\"\n        >\n            { experiencias.map((elemento, indice) => {\n                const descricao = { __html: elemento.descricao };\n                return (\n                    <div\n                        className=\"content\"\n                        key={elemento.empresa}\n                    >\n                        <h2 className=\"title is-h2\">\n                            { elemento.empresa }\n                        </h2>\n                        <h5 className=\"subtitle is-h5\">\n                            <strong>{ elemento.funcao }</strong>\n                            ,\n                            { ' ' }\n                            { elemento.periodo[0] }\n                            { ' ' }\n                            -\n                            { ' ' }\n                            { elemento.periodo[1] }\n                        </h5>\n                        <p dangerouslySetInnerHTML={descricao} />\n                        { indice + 1 < experiencias.length\n                            ? <Hr />\n                            : null }\n                    </div>\n                );\n            })}\n        </div>\n    </Container>\n);\n\nconst Experiencia = () => (\n    <>\n        <Titulo\n            titulo=\"Experiência profissional\"\n            id=\"experiencia\"\n        />\n        <ListarExperiencias />\n    </>\n);\n\nexport default Experiencia;\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => (\n    <footer className=\"footer rodape\">\n        <div className=\"content has-text-centered\">\n            <p>Kelvin Silva M. 2019</p>\n        </div>\n    </footer>\n);\n\nexport default Footer;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport Titulo from '../../../../components/Titulo';\nimport Container from '../../../../components/wrappers/Container';\nimport './index.css';\n\nconst Informacoes = () => (\n    <>\n        <Titulo\n            titulo=\"Sobre\"\n            id=\"about-me\"\n        />\n        <Container\n            isFluid\n        >\n            <div\n                className=\"column is-offset-2 is-8\"\n            >\n                <p className=\"info\">\n                    Sou desenvolvedor fullstack com maior ênfase no frontend, seja levantando requisitos, desenvolvendo wireframes, mockups ou o projeto em si. Tenho melhor proficiência em ReactJs no frontend, conhecendo bem HTML5, CSS3, e Javascript ES6.\n                </p>\n                <p className=\"info\">\n                    Tenho conhecimentos em aplicativos de design, prototipação e mockups como Adobe Xd, Figma, Sketch e Adobe Illustrator. E etapas de UI/UX para elaboração e validação de requisitos.\n                </p>\n                <p className=\"info\">\n                    Já trabalhei com desenvolvimento e adaptação de temas, como também manutenção de sites e lojas para Wordpress.\n                </p>\n                <p className=\"info\">\n                    No backend tenho experiência com\n                    {' '}\n                    <strong>Ruby On Rails</strong>\n                    ,\n                    {' '}\n                    <strong>Django</strong>\n                    {' '}\n                    e\n                    {' '}\n                    <strong>ExpressJs</strong>\n                    , também considerando o aspecto monolítico. Ultimamente apresento um melhor conhecimento com NodeJs, por estar em um ecossistema(Javascript) que estou mais habituado. Tanto também como a escrita de queries SQL(Experiência em Mysql e Postgresql).\n                </p>\n            </div>\n        </Container>\n    </>\n);\n\nexport default Informacoes;\n","import React from 'react';\nimport ReactGa from 'react-ga';\nimport { hotjar } from 'react-hotjar';\nimport './index.css';\n\nimport Header from './parts/Header/Header';\nimport Projetos from './parts/Projetos';\nimport Skills from './parts/Skills';\nimport Certificados from './parts/Certificados';\nimport Experiencia from './parts/Experiencia';\nimport Footer from './parts/Footer';\nimport Informacoes from './parts/Informacoes';\n\nReactGa.initialize('UA-155391739-1');\nReactGa.pageview(window.location.pathname + window.location.search);\nhotjar.initialize(1783773, 6);\n\nconst index = () => {\n    return (\n        <>\n            <Header />\n            <Projetos />\n            <Informacoes />\n            <Skills />\n            <Certificados />\n            <Experiencia />\n            <Footer />\n        </>\n    );\n};\n\nexport default index;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/inicial/index';\nimport * as serviceWorker from './serviceWorker';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}